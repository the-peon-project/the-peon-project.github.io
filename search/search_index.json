{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Peon Project","text":"<p>Welcome to the PEON project.</p> <p></p> <p>Making dedicated game servers accessible to anyone, anywhere.</p> <p>- Zug zug</p>"},{"location":"#news","title":"News","text":"Version Feature Description Steamed Proton 1.0.0 New Steam + Windows Container Type Added the ability to deploy windows based steam servers using the proton layer, instead of native Wine <code>Changelog</code> Orc 1.2.10 Server Import It is now possible to import manually uploaded servers using the <code>API</code> Orc 1.2.9 User Data Download It is now possible to download a compressed copy of a server's user and config files, to backup game progress/download for rehosting via the <code>API</code>."},{"location":"about/","title":"About","text":"<p>Welcome to the PEON project.</p> <p>The easy-to-use GSaaS (Game Server as a Service) platform.</p> <p>Whether self-hosted or in the cloud, PEON aims to be efficient in resource consumption with modern tools for the management of ANY self-hostable game servers.</p> <p>Here you will find all of the official repositories for the PEON project's components.</p> <p></p>"},{"location":"about/#story-behind-the-name","title":"Story behind the name","text":"<p>We love all kinds of games (and want to support them all).</p> <p>However, one of the many genres of game that we love to play is fantasy RTS. We loved the strategy fantasy world of games like Warcraft 2 and thought the concept of the 'peon' worker fit our objectives fairly well.</p> <p>The way we see it, a peon is the lowly lackey of any decent Orcish War Party, sent to do the work of tens of men. They are often expected to raise War Camps with very little in the way of resources and even less time to do it in. They must keep the War Camp stocked and running as battles commence at any time for any duration, and raise it to the ground when the War Chief demands it.</p>"},{"location":"about/#goals","title":"Goals","text":"<p>That informs most of our project objectives:</p> <ol> <li>Easy - We want non-coders to be able to deploy their servers and have their friends join them (no tinkering required). <code>The War Chief needs only to tell the peon what to do, the peon must figure it out and do it</code></li> <li>Any Game - If a game is self-hostable, we want to support it. <code>War Plans can be created very quickly for new War Camps so that Chiefs can battle anywhere they see fit</code></li> <li>Cheap - Extremely efficient (designed to reduce hosting costs in the cloud, or to use as few resources as possible if running on your server). <code>A peon should not require much gold/wood to build his Warcamp</code></li> <li>Fast - The servers must deploy/start/stop in as small a timeframe as possible. We want to game now, not later. <code>Battles do not wait</code></li> </ol>"},{"location":"about/#documentation","title":"Documentation","text":"<p>We have some documentation to help you on your way.</p>"},{"location":"about/#installationdeployment","title":"Installation/Deployment","text":"<p>How to deploy PEON for gaming server automation.</p>"},{"location":"about/#using-peon","title":"Using PEON","text":"<p>How to use PEON gaming server automation services.</p>"},{"location":"about/#development","title":"Development","text":"<p>If you want to develop your recipes (or modify the source code for your objectives) go here</p>"},{"location":"about/#license-information","title":"License Information","text":"<p>Please feel free to look around and use whatever you wish. The project should only be of type MIT.</p>"},{"location":"about/#support-the-project","title":"Support the project","text":""},{"location":"about/#support-through-knowledge","title":"Support through knowledge","text":"<p>Please log tickets if something is wrong, and we will try to address it.</p>"},{"location":"about/#getting-involved","title":"Getting involved","text":"<p>If you would like to get involved, please reach out. In most cases, the help would be greatly appreciated.</p>"},{"location":"about/#other-methods-of-support","title":"Other methods of support","text":"<p>If you'd like to financially support the project, please feel free to donate.</p> <p></p>"},{"location":"about/#references","title":"References","text":""},{"location":"about/#logo","title":"Logo","text":"<p>The logo is a derivative of the art by Andr\u00e9 Kent - Artstation Please follow the link to his site and support him.</p>"},{"location":"about/#scoreboard","title":"Scoreboard","text":"Builds Description Scores Orchestrator This module manages all game servers and is interfaced with using REST. Web UI This is the user friendlyness project. A website to manage various orchestrators. Contained Steam Based on cm2networks steamcmd container, with basic PEON integration (can run stand-alone) Steamed WINE The same as <code>Contained Steam</code> but with WINE to support Windows only servers. Bot.Discord A Discord bot to allow friends and groups of friends to manage the servers."},{"location":"games/","title":"Supported Games","text":"<p>The games list will grow over time, as requests come in or other people contribute recipes to the project.</p> <p>Please feel free to request any game server for development with the war-plan issue creator.</p>"},{"location":"games/#game-servers","title":"Game Servers","text":"<ul> <li> Ark</li> <li> Assetto Corsa Competizione</li> <li> CSGO</li> <li> Counter Strike 2</li> <li> Enshrouded</li> <li> Palworld</li> <li> Quake 3 Arena</li> <li> Satisfactory</li> <li> Starbound</li> <li> Valheim</li> <li> VRising</li> </ul>"},{"location":"development/","title":"Introduction","text":"<p>Welcome to the DEVELOPMENT documentation.</p> <p>Here you can get an overview of how the PEON project is architected, where to go and how to use all of the various tools and code that has been built thus far. Please note that documentation may lag behind the development status, but the general rules/intent should still be valid.</p> <p>Developer</p> <p>Please feel free to chat with us in the Discord develpment server</p>"},{"location":"development/#architecture","title":"Architecture","text":"<p>This diagram shows off the basic architecture of the PEON project.</p> <p>At its core, everything revolves around the Orcs.</p> <p></p> <ul> <li>REST API - The orchestrator can be managed by a REST API, with is represented with orange connection/s.</li> <li>DOCKER SOCKET - The orchestrator manages the underlying docker host using docker sockets (at the moment), which is represented with red connection/s.</li> <li>*Optional Feature - These are not required to leverage the automation services of the PEON project.</li> </ul>"},{"location":"development/#reference","title":"Reference","text":"<p>Below tries to define/explain the use of terms and symbols throughout the project.</p>"},{"location":"development/#terms-acronyms","title":"Terms &amp; Acronyms","text":"Term/Acronym Definition Orc The orchestration component of the PEON project. War Table The PEON component is responsible for shared services around the game servers. War Plan These are the game server recipes. WebUI A website client built for the sole purpose of managing instances of Orcs War Camp A name for a container host that is running an Orc War Chief A name for a module that manages multiple War Camps"},{"location":"development/#symbols","title":"Symbols","text":"<p>Below are the symbols that are typically found throughout the various changelogs/release notes and their meanings.</p> Key Symbol Description RELEASE <code>:zap:</code> When a release contains changes that impact multiple codebases in the project.  IMPACT RELEASE INITIALISED <code>:airplane:</code> When the project is initialised/added to the repository ADDED <code>:new:</code> When a feature/new tool/ service has been added to the codebase CHANGED <code>:tools:</code> When a modification to the existing codebase/architecture has been carried out OPTIMISED <code>:alarm_clock:</code> When a portion of the codebase has been improved visually or with regards to performance REMOVED <code>:scissors:</code> When something is removed/cut from the codebase BUGFIX <code>:beetle:</code> When a bug has been identified and resolved LOGGING <code>:speech_balloon:</code> When logging is added/enhanced/improved TESTED <code>:pencil:</code> When a test task is planned &amp; executed SECURITY <code>:unlock:</code> When some security modifications have been added BLOCKED <code>:no_entry_sign:</code> When something is stuck due to external requirements"},{"location":"development/#tools-technologies","title":"Tools &amp; Technologies","text":"<p>Below, is a list of the various tools and technologies leveraged in the development process for the PEON project.</p>"},{"location":"development/#documentation","title":"Documentation","text":""},{"location":"development/#material-for-mkdocs","title":"Material for MkDocs","text":"<p>Project Link</p> <p>We are using <code>mkdocs-material</code> as the basis for our documentation framework, as it is markdown compliant and requires minimal maintenance to provide aesthetically pleasing documentation.</p>"},{"location":"development/#logosymbol-search","title":"Logo/Symbol Search","text":"<p>If you need to find a logo/symbol that exists in the <code>mkdocs-material</code> platform a useful link is here</p>"},{"location":"development/#diagram-design","title":"Diagram Design","text":""},{"location":"development/#python-diagrams","title":"Python Diagrams","text":"<p>Project Link</p> <p>We are using the diagrams module for Python. It offers the ability to dynamically generate diagrams programmatically. There is a built-in (Material for MkDocs) programmatic diagram software, however, initial investigations did not appear to provide as aesthetic a design as Python Diagrams</p>"},{"location":"development/00_peon/","title":"Peon","text":"<p>This is for tracking the overall project status of the Peon project.</p>"},{"location":"development/00_peon/#changelog","title":"Changelog","text":"<p> IMPACT RELEASE </p> <ul> <li> Put logging into container logs rather than separate files.</li> <li> Added a dev mode to the <code>.env</code> file, which currently increases logging only.</li> </ul>"},{"location":"development/01_orchestrator/","title":"Orchestrator","text":"<p>The Orc (orchestrator) module is the heart of the project.</p> <p>It is what manages the process of game server deployment for users.</p>"},{"location":"development/01_orchestrator/#design-objectives","title":"Design Objectives","text":"<ul> <li>Extremely lightweight.</li> <li>REST API managed</li> <li>Deploy/control game containers.</li> <li>Abstracted from the game server/container platform to allow stack evolution.</li> </ul>"},{"location":"development/01_orchestrator/#software-stack-diagram","title":"Software Stack Diagram","text":"<p>*This may change as technologies &amp; skills evolve.</p> <p></p>"},{"location":"development/01_orchestrator/#dev-notes","title":"Dev Notes","text":"<p>HTML Response Codes</p>"},{"location":"development/01_orchestrator/#navigation","title":"Navigation","text":"<p>Links to various project-related resources.</p> <p> </p>"},{"location":"development/01_orchestrator/#features","title":"Features","text":"<ul> <li> User file backups</li> <li> Update to new deployment architecture.</li> <li> RESTapi (v1) - Plan/recipies</li> <li> Security - api-key integration</li> <li> Start/Stop scheduler</li> <li> RESTapi (v1) - custom configurations</li> <li> Server deployment (v2) - custom configurations</li> <li> Persistent server data - Keep server data for updates &amp; future releases.</li> <li> RESTapi (v1)</li> <li> Server deployment (v1)</li> </ul>"},{"location":"development/01_orchestrator/#roadmap","title":"Roadmap","text":"<p>Here are some planned features</p> <ul> <li> Security - Add <code>fail2ban</code> to REST API</li> <li> Security - Users &amp; Audit Logging</li> <li> RESTapi (v1) - Console</li> </ul>"},{"location":"development/01_orchestrator/#release-notes","title":"Release Notes","text":""},{"location":"development/01_orchestrator/#1211","title":"1.2.11","text":"<ul> <li> CHANGE  Updated to latest OS/package combinations.</li> </ul>"},{"location":"development/01_orchestrator/#1210","title":"1.2.10","text":"<ul> <li> ADDED  Ability to import any game servers</li> </ul>"},{"location":"development/01_orchestrator/#129","title":"1.2.9","text":"<ul> <li> ADDED  Added backup save to <code>/home/peon/backup</code></li> <li> ADDED  Ability to download user and config data for a game server (via <code>/home/peon/backup</code>).</li> </ul>"},{"location":"development/01_orchestrator/#128","title":"1.2.8","text":"<ul> <li> BUGFIX  Enforced UID 1000 on all folders in the server directory (on create and on docker-compose action)</li> </ul>"},{"location":"development/01_orchestrator/#127","title":"1.2.7","text":"<ul> <li> ADDED  Ability to update the game server using the API.</li> </ul>"},{"location":"development/01_orchestrator/#126","title":"1.2.6","text":"<ul> <li> LOGGING  Improve logging response to handle bad JSON/missing files on plan load.</li> </ul>"},{"location":"development/01_orchestrator/#125","title":"1.2.5","text":"<ul> <li> BUGFIX  Repaired an issue with a plan not seeing a description</li> </ul>"},{"location":"development/01_orchestrator/#124","title":"1.2.4","text":"<ul> <li> CHANGED  Updated how the cli tool references files inside the container</li> </ul>"},{"location":"development/01_orchestrator/#123","title":"1.2.3","text":"<ul> <li> BUGFIX  Make better alert when the folder already exists, not <code>action not supported</code></li> </ul>"},{"location":"development/01_orchestrator/#122","title":"1.2.2","text":"<ul> <li> ADDED  Ability to make custom REST API key through env vars.</li> </ul>"},{"location":"development/01_orchestrator/#121","title":"1.2.1","text":"<ul> <li> ADDED  Added <code>skip</code> flag to <code>Server PUT</code> to force bypass of actions (if required)</li> <li> BUGFIX  Added return on successful create when not start is requested.</li> </ul>"},{"location":"development/01_orchestrator/#120","title":"1.2.0","text":"<p> IMPACT RELEASE </p> <ul> <li> CHANGED  Changed URL path from <code>/api/1.0</code> to <code>/api/v1</code></li> <li> CHANGED  Added sort to <code>get_plans</code></li> </ul>"},{"location":"development/01_orchestrator/#110","title":"1.1.0","text":"<p> IMPACT RELEASE </p> <ul> <li> CHANGED  Moved logging into container logs</li> <li> ADDED  Added <code>DEV_MODE</code> flag to enable/disable logging/dev mode.</li> </ul>"},{"location":"development/01_orchestrator/#105","title":"1.0.5","text":"<ul> <li> BUGFIX  Fixed API destroy + eradicate of a server.</li> </ul>"},{"location":"development/01_orchestrator/#104","title":"1.0.4","text":"<ul> <li> ADDED  Check if the environment variable <code>HOST_DIR</code> is empty.</li> <li> ADDED  Added a clean on failure when a server creation is triggered.</li> <li> ADDED  Added an API flag <code>noclean</code> to disable clean on failure.</li> <li> BUGFIX  Fixed issue where failures on <code>docker compose</code> commands did not get handled by API correctly.</li> <li> BUGFIX  Fixed an issue where generic failure was being reported back via API when plans were being generated.</li> <li> LOGGING  Added additional step logging for debug logging to assist in fault finding.</li> </ul>"},{"location":"development/01_orchestrator/#103","title":"1.0.3","text":"<ul> <li> BUGFIX  Updated API for use with Discord bot.</li> </ul>"},{"location":"development/01_orchestrator/#102","title":"1.0.2","text":"<ul> <li> CHANGE  Re-enabled stop scheduler.</li> <li> REMOVED  Disabled flask debug mode (as it causes issues with the scheduler)</li> </ul>"},{"location":"development/01_orchestrator/#101","title":"1.0.1","text":"<ul> <li> BUGFIX  Removed <code>docker-compose create</code> from API when no start is selected.</li> <li> BUGFIX  Updated to <code>docker compose</code> from <code>docker-compose</code> paradigm</li> </ul> <p> IMPACT RELEASE </p>"},{"location":"development/01_orchestrator/#100","title":"1.0.0","text":"<ul> <li> CHANGE  Plans - Reworked entire plans module for docker-compose architecture</li> <li> CHANGE  Servers - Reworked entire servers module for docker-compose architecture</li> <li> CHANGE  API - Updated API for docker-compose architecture.</li> <li> BUGFIX  All - fixed several issues after rework</li> <li> ADDED  warcamp - cleanup</li> <li> ADDED  get_warcamp - check container state and update state accordingly.</li> <li> CHANGE  <code>CURRENT_TASK</code> API - Deploy server from API call. (Untested <code>server create</code> function)</li> <li> ADDED  API - Plan - Get required settings</li> <li> CHANGE  Change to SVN download for directory (plans)</li> <li> CHANGE  Moved to <code>docker compose</code> based model for better re-usability/clarity.</li> <li> CHANGE  API - Removed servers/server marshall flow for more versatile response handling</li> <li> BUGFIX  API - Plans - Fixed the get and update from server plans</li> </ul>"},{"location":"development/01_orchestrator/#032","title":"0.3.2","text":"<ul> <li> ADDED  Added <code>/app/bin</code> to the path and added <code>peon</code> cli module into orc.</li> <li> CHANGE  Make API key configurable</li> </ul>"},{"location":"development/01_orchestrator/#031","title":"0.3.1","text":"<ul> <li> CHANGE  Rework Orchestrator app to leverage the <code>docker.sock</code></li> <li> CHANGE  Moving to init script <code>init/peon.orc</code>, for pre-flight checks.</li> <li> REMOVED  Removed SSH check on boot from <code>python3 main.py</code></li> <li> ADDED  Configurable docker socket path.</li> <li> ADDED  Added <code>VERSION</code> environment variable into the container.</li> </ul>"},{"location":"development/01_orchestrator/#030","title":"0.3.0","text":"<ul> <li> CHANGE  Change the docker file to support using <code>docker.sock</code> socket file to manage docker (from SSH)</li> </ul>"},{"location":"development/01_orchestrator/#0217","title":"0.2.17","text":"<ul> <li> BUGFIX  Remove schedule on manual stop</li> <li> CHANGE  Validate epoch time input for scheduler epoch time</li> </ul>"},{"location":"development/01_orchestrator/#0216","title":"0.2.16","text":"<ul> <li> BUGFIX  Server create returned false error due to change error dict handler</li> </ul>"},{"location":"development/01_orchestrator/#0215","title":"0.2.15","text":"<ul> <li> BUGFIX  Scheduler vs Start/Stop</li> </ul>"},{"location":"development/01_orchestrator/#0214","title":"0.2.14","text":"<ul> <li> BUGFIX  Scheduler v1.0 - Bugfix (server stop is now properly scheduled)</li> </ul>"},{"location":"development/01_orchestrator/#0213","title":"0.2.13","text":"<ul> <li> ADDED  Scheduler - v1.0 - Added simple start &amp; delayed stop in scheduler</li> </ul>"},{"location":"development/01_orchestrator/#0212","title":"0.2.12","text":"<ul> <li> CHANGE  API Response - Server config</li> </ul>"},{"location":"development/01_orchestrator/#0211","title":"0.2.11","text":"<ul> <li> ADDED  PUBLIC_IP - added to container variables</li> </ul>"},{"location":"development/01_orchestrator/#0210","title":"0.2.10","text":"<ul> <li> Logging - Added devMode switch</li> </ul>"},{"location":"development/01_orchestrator/#029","title":"0.2.9","text":"<ul> <li> ADDED  UI - Added MOTD to container login</li> </ul>"},{"location":"development/01_orchestrator/#028","title":"0.2.8","text":"<ul> <li> CHANGE   Base images were pulled to get the latest versions &amp; app was rebuilt on those</li> <li> BUGFIX  Incorrect parameter reference in server create</li> </ul>"},{"location":"development/01_orchestrator/#027","title":"0.2.7","text":"<ul> <li> SECURITY  Inital CORS implementation</li> <li> SECURITY  Initial api-key requirement implementation</li> </ul>"},{"location":"development/01_orchestrator/#026","title":"0.2.6","text":"<ul> <li> ADDED  API - Server - Destroy &amp; Eradicate</li> </ul>"},{"location":"development/01_orchestrator/#025","title":"0.2.5","text":"<ul> <li> ADDED  API - Server - Reworked to include actions into the path</li> <li> ADDED  API - Server - Added get with metrics</li> </ul>"},{"location":"development/01_orchestrator/#024","title":"0.2.4","text":"<ul> <li> ADDED  API - Server Get - reworked to provide both container &amp; server state</li> </ul>"},{"location":"development/01_orchestrator/#023","title":"0.2.3","text":"<ul> <li> ADDED  API - Auto download latest plan version when the server is deployed</li> </ul>"},{"location":"development/01_orchestrator/#022","title":"0.2.2","text":"<ul> <li> ADDED  API - Plans get list &amp; update from Peon project list</li> </ul>"},{"location":"development/01_orchestrator/#021","title":"0.2.1","text":"<ul> <li> BUGFIX  Enforced description &amp; settings on [post]servers</li> </ul>"},{"location":"development/01_orchestrator/#020","title":"0.2.0","text":"<ul> <li> ADDED  Added custom config handler</li> <li> CHANGE  Allows configuration of environment variables in the container (via API)</li> <li> ADDED  Can supply json/txt files via API</li> <li> ADDED  Added persistent description</li> </ul>"},{"location":"development/01_orchestrator/#016","title":"0.1.6","text":"<ul> <li> ADDED  Added handler for <code>config</code> folder</li> <li> ADDED  Moved game server logs into the game server directory</li> </ul>"},{"location":"development/01_orchestrator/#015","title":"0.1.5","text":"<ul> <li> INITIALISED  The first iteration of server create (API)</li> </ul>"},{"location":"development/02_wartable/","title":"War Table","text":"<p>The War Table module works in conjunction with the Orchestrator to provide the relevant tools for the game containers.</p> <p>This project handles the tools that are shared between game containers.</p>"},{"location":"development/02_wartable/#projects","title":"Projects","text":"<p>Contained Steam (steamcmd) are scripts to automate/update <code>steamcmd</code> and the game server files (within a <code>steamcmd</code>-based docker container), as part of the PEON automation services.</p> <p>Steamed Wine (steamcmd+winhq) is a custom container to facilitate game servers that are only built for Windows OS, within the PEON tool suite.</p>"},{"location":"development/02_wartable/#modes","title":"Modes","text":"<p>Modes are just unique names that help the recipe inform the server which mechanism must be followed with the automation of services. Hopefully, this will stay a short-list</p> Mode Release Notes Container Tag <code>steamcmd</code> Contained Steam umlatt/steamcmd <code>steamwine</code> Steamed Wine umlatt/steamcmd-winehq <code>steamproton</code> Steamed Proton umlatt/steamcmd-proton"},{"location":"development/02_wartable/#design-objectives","title":"Design Objectives","text":"<ol> <li>Only scripts/code are to be stored here. Large file pulls should be done from other sources.</li> <li>Attempt to keep the code pool as generic as possible to maximize code reuse/supportability.</li> <li>If something already exists and is open source, do not rewrite it needlessly.</li> </ol>"},{"location":"development/02_wartable/#software-stack-diagram","title":"Software Stack Diagram","text":"<p>*This may change as technologies &amp; skills evolve.</p> <p></p>"},{"location":"development/02_wartable/#navigation","title":"Navigation","text":"<p>Links to various project-related resources.</p> <p> </p>"},{"location":"development/02_wartable/#roadmap","title":"Roadmap","text":"<p>Here you can see what the future holds.</p> <ul> <li> ADDED  <code>steamcmd</code> non-anonymous user login with steamapp authenticator flow</li> </ul>"},{"location":"development/02_wartable/#release-notes","title":"Release Notes","text":""},{"location":"development/02_wartable/#contained-steam","title":"Contained Steam","text":"<p>A PEON implementation of vanilla <code>SteamCMD</code>.</p> <p>1.2.10</p> <ul> <li> CHANGE  Updated to latest OS/package combinations.</li> </ul> <p>1.2.9</p> <ul> <li> CHANGE  Updated to latest OS/package combinations.</li> </ul> <p>1.2.8</p> <ul> <li> CHANGED  Fixed <code>.initialized</code> flag.</li> </ul> <p>1.2.7</p> <ul> <li> ADDED  Added environment variable <code>LOG_PATH</code> for redirecting outputs to the docker log</li> </ul> <p>1.2.6</p> <ul> <li> CHANGED  Rebuilt off of the latest available source image.</li> </ul> <p>1.2.5</p> <ul> <li> CHANGED  Rebuilt off of the latest available source image.</li> </ul> <p>1.2.4</p> <ul> <li> CHANGED  Added error details as a parameter into <code>/</code>init/shared`</li> </ul> <p>1.2.1</p> <ul> <li> CHANGED  Updated to the latest version of <code>steamcmd</code></li> </ul> <p>1.2.0</p> <p> IMPACT RELEASE </p> <ul> <li> CHANGED  Reworked the container image to use less ambiguous mount options for files.</li> <li> ADDED  Additional outputs to state file</li> <li> ADDED  Fail on missing <code>/actions</code> folder (not being mounted)</li> </ul> <p>1.1.4</p> <ul> <li> CHANGED  Maintenance release. Rebuilt image to latest base software release.</li> </ul> <p>1.1.3</p> <ul> <li> CHANGED  Changed environment variable <code>STEAMID</code> to <code>STEAM_ID</code> to match builder.</li> </ul> <p>1.1.2</p> <ul> <li> ADDED  Set server state to <code>OFFLINE</code> on shutdown (SIGTERM sent to PID 1)</li> <li> LOGGING  changed the step header prefix to <code>[*]</code></li> </ul> <p>1.1.1</p> <ul> <li> LOGGING  changed the step header prefix to <code>[o]</code></li> <li> BUGFIX  fixed a permissions issue on boot.</li> </ul> <p>1.1.0</p> <p> IMPACT RELEASE </p> <ul> <li> CHANGED  reworked the entire deployment flow for better permissions and deeper PEON integration</li> <li> CHANGED  PEON-specific files now live in <code>/home/steam/peon</code> and do not need multiple volume mounts.</li> <li> ADDED  A container env var that links (if exists) the relevant save data to the <code>/home/steam/peon/download</code> directory.</li> </ul> <p>1.0.6</p> <ul> <li> CHANGED  Set init scripts to run as root. Only the <code>server_start</code> script is run as <code>steam</code> user.</li> <li> ADDED  Login banner</li> </ul> <p>1.0.5</p> <ul> <li> CHANGED  Set default server save path to <code>/home/steam/data</code> to match most recipes.</li> </ul> <p>1.0.3</p> <ul> <li> ADDED  Made <code>server_start</code> script generic (interpreter directive such as #!/bin/bash = bash script, etc.)</li> <li> CHANGED  Reworked the naming to allow for generic container use.</li> </ul> <p>1.0.2</p> <ul> <li> ADDED  Init scripts to ensure the server is updated to the latest build on boot.</li> </ul> <p>1.0.0</p> <ul> <li> INITIALISED  Initial commit</li> </ul>"},{"location":"development/02_wartable/#steamed-wine","title":"Steamed Wine","text":"<p>A PEON implementation of vanilla <code>SteamCMD</code> with a <code>WINEHQ</code> implementation to support Windows native servers.</p> <p>1.2.10</p> <ul> <li> CHANGE  Updated to latest OS/package combinations.</li> </ul> <p>1.2.9</p> <ul> <li> CHANGE  Updated to latest OS/package combinations.</li> </ul> <p>1.2.8</p> <ul> <li> CHANGED  Fixed <code>.initialized</code> flag.</li> </ul> <p>1.2.7</p> <ul> <li> ADDED  Added environment variable <code>LOG_PATH</code> for redirecting outputs to the docker log</li> </ul> <p>1.2.6</p> <ul> <li> CHANGED  Rebuilt off of the latest available source image.</li> </ul> <p>1.2.5</p> <ul> <li> CHANGED  Rebuilt off of the latest available source image.</li> <li> ADDED  Packages <code>lib32gcc1-s1</code> and <code>libstdc++6</code> which should further enhance 32-bit application support.</li> </ul> <p>1.2.4</p> <ul> <li> CHANGED  Added error details as a parameter into <code>/</code>init/shared`</li> </ul> <p>1.2.1</p> <ul> <li> CHANGED  Updated to the latest version of <code>steamcmd</code></li> </ul> <p>1.2.0</p> <p> IMPACT RELEASE </p> <ul> <li> CHANGED  Reworked the container image to use less ambiguous mount options for files.</li> <li> ADDED  Additional outputs to state file</li> <li> ADDED  Fail on missing <code>/actions</code> folder (not being mounted)</li> </ul> <p>1.1.4</p> <ul> <li> CHANGED  Maintenance release. Rebuilt image to latest base software release.</li> </ul> <p>1.1.3</p> <ul> <li> CHANGED  Changed environment variable <code>STEAMID</code> to <code>STEAM_ID</code> to match builder.</li> </ul> <p>1.1.2</p> <ul> <li> ADDED  Set server state to <code>OFFLINE</code> on shutdown (SIGTERM sent to PID 1)</li> <li> LOGGING  changed the step header prefix to <code>[*]</code></li> </ul> <p>1.1.1</p> <ul> <li> LOGGING  changed the step header prefix to <code>[o]</code></li> <li> BUGFIX  fixed a permissions issue on boot.</li> </ul> <p>1.1.0</p> <ul> <li> ADDED  Add init scripts to mirror changes to PEON</li> </ul> <p>1.0.0</p> <ul> <li> ADDED  WINE deployed</li> <li> TESTED  WINE with VRising server.</li> <li> INITIALISED  Initial commit</li> </ul>"},{"location":"development/02_wartable/#steamed-proton","title":"Steamed Proton","text":"<p>A PEON implementation of vanilla <code>SteamCMD</code> with the Proton layer added to more closely mirror steams emulation layers.</p> <p>1.0.0</p> <ul> <li> ADDED  Proton+WINE deployed</li> <li> TESTED  Proton with Enshrouded server.</li> <li> INITIALISED  Initial commit</li> </ul>"},{"location":"development/03_warplans/","title":"War Plans","text":"<p>The War Plan module works in conjunction with the Orchestrator to deploy specific game servers upon request.</p> <p>This project handles unique game recipes.</p>"},{"location":"development/03_warplans/#projects","title":"Projects","text":"<p>For the list of supported games please go here</p>"},{"location":"development/03_warplans/#design-objectives","title":"Design Objectives","text":"<ol> <li>Try to confine recipe definitions to a simple <code>docker-compose.yml</code> file and a <code>.env</code> where possible.</li> <li>Use the below Image build hierarchy definition to decide on the best course of action.</li> </ol>"},{"location":"development/03_warplans/#image-build-hierarchy","title":"Image build hierarchy","text":"<p>*Official container images are usually bespoke, so it may take some additional modification to the wider PEON app stack, which is not desirable.</p> <ol> <li>Use pre-existing generic PEON container image/s if exists</li> <li>Log a request for enhancement to improve the existing builds (if possible)</li> <li>Use an official game server container image if exists, but add the PEON tweaks to the build *</li> <li>Alternatively, create a PEON-compliant container</li> </ol>"},{"location":"development/03_warplans/#software-stack-diagram","title":"Software Stack Diagram","text":"<p>*This may change as technologies &amp; skills evolve.</p> <p></p>"},{"location":"development/03_warplans/#navigation","title":"Navigation","text":"<p>Links to various project-related resources.</p> <p> </p>"},{"location":"development/04_webui/","title":"Web UI","text":"<p>The Web UI module is a supplemental service to the PEON project.</p> <p>This is a user frontend (website) for managing PEON War Camps.</p> <p>EARLY DEVELOPMENT - Completely useless at this point</p>"},{"location":"development/04_webui/#design-objectives","title":"Design Objectives","text":"<ul> <li>Extremely lightweight.</li> <li>Aesthetic design principles</li> <li>Controls remote systems through REST</li> </ul>"},{"location":"development/04_webui/#software-stack-diagram","title":"Software Stack Diagram","text":"<p>*This may change as technologies &amp; skills evolve.</p> <p></p>"},{"location":"development/04_webui/#dev-notes","title":"Dev Notes","text":"<p>THIS IS PROBABLY GOING TO BE DEPRECATED FOR A PROPER WEB STACK</p> <p>WebUI (PeonUI) is built into a docker image using Flask as a base.</p> <ul> <li>Flask provided by tiangolo/uvicorn-gunicorn-fastapi-docker</li> <li>Bootstrap provided by bootswatch/darkly</li> <li>Postgres provided by postgres:14-alpine</li> </ul> <p>Flask app example</p>"},{"location":"development/04_webui/#navigation","title":"Navigation","text":"<p>Links to various project-related resources.</p> <p> </p>"},{"location":"development/04_webui/#features","title":"Features","text":"<ul> <li> Nothing yet</li> </ul>"},{"location":"development/04_webui/#roadmap","title":"Roadmap","text":"<ul> <li> Recipes - Autodetect newly added recipes.</li> <li> Persistent server data - Keep server data for updates &amp; future releases.</li> <li> WebUI - Access controlled webpage for management</li> <li> Deploy and delete games from a recipe catalog (hosted here)</li> <li> Start/stop servers with timeouts (e.g. specify a game session to run for 6 hours (with the option to extend))</li> </ul>"},{"location":"development/04_webui/#release-notes","title":"Release Notes","text":""},{"location":"development/04_webui/#016","title":"0.1.6","text":"<ul> <li> Favicon</li> </ul>"},{"location":"development/04_webui/#015","title":"0.1.5","text":"<ul> <li> Logging - Added devMode switch</li> </ul>"},{"location":"development/04_webui/#014","title":"0.1.4","text":"<ul> <li> Dev Tools - Added dev tools to the container</li> <li> MOTD - Added motd on login</li> </ul>"},{"location":"development/04_webui/#013","title":"0.1.3","text":"<ul> <li> Base Image Update - Base images were pulled to get the latest versions &amp; app was rebuilt on those</li> </ul>"},{"location":"development/04_webui/#012","title":"0.1.2","text":"<ul> <li> Cleaned up the theme</li> </ul>"},{"location":"development/04_webui/#011","title":"0.1.1","text":"<ul> <li> Initial implementation of flask-python framework</li> </ul>"},{"location":"development/05_cli/","title":"CLI","text":"<p>A handy CLI to manage PEON services remotely (as well as to provide extended access/control)</p>"},{"location":"development/05_cli/#installation","title":"Installation","text":"<p>If not installed via installation script, the <code>peon-cli</code> can be installed manually.</p> <ol> <li>Download &amp; copy the <code>peon-cli</code> folder into your preferred path.</li> <li>Create a folder/file <code>./config/peon_dir</code> in the root path of the <code>peon-cli</code> scripts folder.</li> <li>Input the full path of the <code>peon</code> installation directory (e.g. <code>/home/myuser/peon</code>) into the <code>peon_dir</code> file in the <code>peon-cli</code> scripts folder.</li> <li>Add your <code>peon-cli</code> script folder to your path (if you wish)</li> </ol>"},{"location":"development/05_cli/#usage","title":"Usage","text":""},{"location":"development/05_cli/#interactive-mode","title":"Interactive mode","text":"<p>The peon cli offers an interactive mode for administration services Just run <code>./peon</code></p>"},{"location":"development/05_cli/#non-interactive-mode","title":"Non-Interactive mode","text":"<p>Some standard peon-cli tools can be executed programmatically using flags. Just run <code>./peon [flags]</code></p>"},{"location":"development/05_cli/#supported-flags","title":"Supported Flags","text":"<pre><code>    -h|--help       Display this (H)elp information.\n    -t|--status     S(t)atus of all containers\n    -l|--list       (L)ist running GAME containers.\n    -m|--metrics    Performance statistics/(M)etrics for ALL running containers.\n    -c|--capacity   Show storage space &amp; (C)apacity usage for all docker components.\n    -u|--update     (U)pdates infrastrcture containers.\n    -d|--redeploy   Re(d)eploy the infrastructure containers. \n    -s|--start      (S)tarts infrastrcture conatiners.\n    -p|--stop       Sto(p)s infrastrcture containers.\n    -r|--restart    (R)estarts infrastrcture containers.\n    -k|--kill       (K)ill ALL running containers.\n</code></pre>"},{"location":"development/05_cli/#roadmap","title":"Roadmap","text":"<p>Here you can see what the future holds.</p>"},{"location":"development/05_cli/#release-notes","title":"Release Notes","text":""},{"location":"development/05_cli/#100","title":"1.0.0","text":"<ul> <li> CHANGE  Removed <code>peon_dir</code> file from build. </li> </ul>"},{"location":"development/50_bot_discord/","title":"Bot.Discord","text":"<p>The Web UI module is a supplemental service to the PEON project.</p> <p>This is a Discord bot to manage orchestrators.</p> <p>RELEASED</p>"},{"location":"development/50_bot_discord/#design-objectives","title":"Design Objectives","text":"<ul> <li>Non-programmer friendly</li> </ul>"},{"location":"development/50_bot_discord/#software-stack-diagram","title":"Software Stack Diagram","text":""},{"location":"development/50_bot_discord/#dev-notes","title":"Dev Notes","text":"<ul> <li>How to: guide</li> <li>Discord Application</li> <li>Discord.py</li> </ul>"},{"location":"development/50_bot_discord/#improved-bots","title":"Improved bots","text":"<p>interactions.py</p>"},{"location":"development/50_bot_discord/#navigation","title":"Navigation","text":"<p>Links to various project-related resources.</p> <p> </p>"},{"location":"development/50_bot_discord/#features","title":"Features","text":"<ul> <li>  All basic server control functionality (start, stop, restart...)</li> <li>  API calls respond with builder/based on cards (embeds)</li> </ul>"},{"location":"development/50_bot_discord/#roadmap","title":"Roadmap","text":"<ul> <li> CHANGED  Bot is re-written for <code>slash</code> commands (see <code>interactions.py</code>)</li> <li> ADDED  Deploy server from discord</li> <li> ADDED  Get a list of available plans.</li> <li> ADDED  Get specific plan details.</li> <li> ADDED  Trigger plan update on all orchestrators.</li> </ul>"},{"location":"development/50_bot_discord/#release-notes","title":"Release Notes","text":""},{"location":"development/50_bot_discord/#127","title":"1.2.7","text":"<ul> <li> BUGFIX  Fixed an issue where the local orc's API key would not be updated in the config file. </li> </ul>"},{"location":"development/50_bot_discord/#126","title":"1.2.6","text":"<ul> <li> CHANGE  Built on the latest python/package codebase</li> </ul>"},{"location":"development/50_bot_discord/#125","title":"1.2.5","text":"<ul> <li> CHANGE  Updated to latest OS/package combinations.</li> </ul>"},{"location":"development/50_bot_discord/#124","title":"1.2.4","text":"<ul> <li> TYPO  Fixed a bad response example in <code>!usage</code> command</li> </ul>"},{"location":"development/50_bot_discord/#123","title":"1.2.3","text":"<ul> <li> ADDED  Usage response</li> </ul>"},{"location":"development/50_bot_discord/#122","title":"1.2.2","text":"<ul> <li> ADDED  Update game server command.</li> </ul>"},{"location":"development/50_bot_discord/#121","title":"1.2.1","text":"<ul> <li> BUGFIX  Fixed an issue with the regex matching for a minute interval (would match any possible string)</li> </ul>"},{"location":"development/50_bot_discord/#120","title":"1.2.0","text":"<p> IMPACT RELEASE </p> <ul> <li> CHANGED  Added language localization. Completely re-wrote messaging language module.</li> <li> CHANGED  Moved localization files to <code>/app/reference/</code></li> <li> CHANGED  Moved from <code>/api/1.0</code> to <code>/api/v1</code></li> <li> ADDED  Get a list of available game plans</li> </ul>"},{"location":"development/50_bot_discord/#110","title":"1.1.0","text":"<p> IMPACT RELEASE </p> <ul> <li> CHANGED  Moved logging into container logs</li> <li> ADDED  Added <code>DEV_MODE</code> flag to enable/disable logging/dev mode.</li> </ul>"},{"location":"development/50_bot_discord/#101","title":"1.0.1","text":"<ul> <li> BUGFIX  Auto append minute time unit to request, if no time unit is provided.</li> </ul>"},{"location":"development/50_bot_discord/#100","title":"1.0.0","text":"<ul> <li> CHANGED  Improved data response legibility on get.</li> <li> CHANGED  Updated bot to handle changes to the Orc API (since Orc release v1.0.1)</li> <li> REMOVED  Removed <code>dev_mode</code> switch</li> </ul> <p> IMPACT RELEASE </p>"},{"location":"development/50_bot_discord/#028","title":"0.2.8","text":"<ul> <li> CHANGED  Messaging - Reworked error messages</li> <li> BUGFIX  Scheduling past event times.</li> </ul>"},{"location":"development/50_bot_discord/#027","title":"0.2.7","text":"<ul> <li> ADDED  Added shutdown scheduler</li> </ul>"},{"location":"development/50_bot_discord/#026","title":"0.2.6","text":"<ul> <li> CHANGED  Better natural language support</li> </ul>"},{"location":"development/50_bot_discord/#025","title":"0.2.5","text":"<ul> <li> ADDED  Added aliases for commands</li> </ul>"},{"location":"development/50_bot_discord/#022","title":"0.2.2","text":"<ul> <li> CHANGED  Reformatted info in the message feed</li> <li> ADDED  Server_Config - Allowed for json formatted content</li> </ul>"},{"location":"development/50_bot_discord/#021","title":"0.2.1","text":"<ul> <li> ADDED  Discord - Added message cleaner <code>clear [int]</code></li> </ul>"},{"location":"development/50_bot_discord/#020","title":"0.2.0","text":"<ul> <li> ADDED  Orc - control start/stop/restart</li> </ul>"},{"location":"development/50_bot_discord/#011","title":"0.1.1","text":"<ul> <li> ADDED  Added devMode switch</li> </ul>"},{"location":"development/50_bot_discord/#010","title":"0.1.0","text":"<ul> <li> ADDED  First version of the bot</li> <li> ADDED  Basic get-all/get the functionality</li> <li> SECURITY  Hardcoded bot key</li> </ul>"},{"location":"development/50_bot_discord/#000","title":"0.0.0","text":"<ul> <li> INITIALISED  Initial commit</li> </ul>"},{"location":"development/games/","title":"Introduction","text":"<p>Here are the notes on the game server development.</p>"},{"location":"development/games/#resources","title":"Resources","text":""},{"location":"development/games/#dedicated-server-possibilities","title":"Dedicated Server Possibilities","text":""},{"location":"development/games/#steam","title":"Steam","text":"<p>An active development list can be found here</p>"},{"location":"development/games/#development-guidelines","title":"Development Guidelines","text":""},{"location":"development/games/#standardization","title":"Standardization","text":"<p>The aim is to figure out how to standardize the deployment of servers such that creating and deploying new servers is as simple as possible.</p>"},{"location":"development/games/#hierarchy-of-importance","title":"Hierarchy of importance","text":"<p>When a technical decision needs to be made, the below list indicates how the outcome should be decided best. For example_, if a particular architecture is easy_ to implement, but at the cost of user functionality, then try to identify a better solution.</p> <ul> <li>User simplicity: The overriding deciding factor will always be, what would make the experience better for the user.</li> <li>Developer Simplicity: The second highest priority is making extending the platform's functionality should be paramount to the design decision.</li> <li>Default Builds: If possible, default to the <code>umlatt/steamcmd</code>/<code>umlatt/steamcmd-wine</code>-based container image/s that have been built with PEON in mind. This should reduce the need for custom work for the rest of the platform. *Even if that means opening up a ticket against the relevant project so that we can improve it accordingly.</li> </ul> <p>Don't be afraid to discard excellent code, just because its excellent. Good code can always find another home. A poor use of good code is a poor use of time.</p>"},{"location":"development/games/#directory-structure","title":"Directory Structure","text":"<pre><code>./data/             # DIR: This is where the game server binaries/files are stored\n./peon/             # DIR: This is for PEON status information files\n./upload/           # DIR: *This is a folder where custom settings files can be uploaded so that they can be implemented.\n./user/             # DIR: *This should be mapped to any user data that needs to be retained (such as a 'world save')\n.env                # FILE: This is the main configuration mechanism. All customizations should be implemented here.\ndocker-compose.yml  # FILE: This defines the game server build. No hard coding of settings is to be done here (unless they are unchangeable)\nsettings.json       # FILE: *This file will be the main mechanism the orchestrator will use to understand the mapping of the server to the host. (Such as custom/changeable files and so on) \nsever_start         # FILE: This file defines which command and how to run it, in order for the unique server instance to start.\n</code></pre> <p>*These are not always used.</p>"},{"location":"development/games/#settings-file","title":"Settings File","text":"<p> The <code>settings.json</code> file is required for all recipes (when being used by PEON) as it provides the relevant directive to PEON, to handle the container appropriately.</p>"},{"location":"development/games/#metadata","title":"metadata","text":"<p>The information about the plan as well as indicating to PEON which deployment paradigm must be followed</p> Key Example Description <code>gid</code> <code>csgo</code> the PEON game id (this value is what PEON uses to manage the appropriate game resources) <code>version</code> <code>1.0.1</code> The current PEON build based on the release notes <code>mode</code> <code>steamcmd</code> Informs the Orchestrator which container and therefore paradigm must be used to handle the resource. The only mode possibilities are defined by what is supported by PEON currently. WarTable/Modes"},{"location":"development/games/#env_vars","title":"env_vars","text":"<p>These are environment variables that are supplied to the relevant container. (They are pushed into the <code>.env</code> file for the server)</p> <p>The environment variable name is provided as a key, with its value being a collection of settings.</p> <p>Each environment variable is made up of three component settings.</p> Key Description <code>default</code> This is the default setting, as defined by the plan (and will not be changed) <code>value</code> This is the new setting (it will override what is in default within the container)s <code>optional</code> This indicates whether or not this value is required by the plan. <p>If there are no special <code>env_vars</code> to provide, you may leave this section out.</p>"},{"location":"development/games/#files","title":"files","text":"<p>These are for locating the game server's specific config files. This should allow fine-grained control over the server's functioning for more advanced users.</p> <p>The key, in files, is the filename, with the values containing file metadata.</p> Key Description <code>path</code> This indicates the path, within the container, where the file should/does reside. <code>sample</code> This indicates that there is a default file in that location (which can then be retrieved for the user to configure) <code>default</code> This indicates to PEON whether the server is running a user-modified file or the default file. <p>If there are no special <code>config_files</code> to provide, you may leave this section out.</p>"},{"location":"development/games/#example","title":"Example","text":"<pre><code>{\n    \"metadata\" : {\n        \"gid\" : \"csgo\",\n        \"version\" : \"1.0.0\",\n        \"mode\" : \"steamcmd\"\n    },\n    \"env_vars\" : {\n        \"STEAM_GSLT\"     : { \"default\" : 0,             \"value\" : null, \"optional\" : true },\n        \"CSGO_GAME_TYPE\" : { \"default\" : 0,             \"value\" : null, \"optional\" : true },\n        \"CSGO_GAME_MODE\" : { \"default\" : 0,             \"value\" : null, \"optional\" : true },\n        \"CSGO_MAP_GROUP\" : { \"default\" : \"mg_active\",   \"value\" : null, \"optional\" : true },\n        \"CSGO_MAP\"       : { \"default\" : \"de_dust2\",    \"value\" : null, \"optional\" : true }\n    },\n    \"files\" : {\n        \"autoexec.cfg\"          : { \"path\" : \"/home/steam/server_files/csgo/cfg/autoexec.cfg\", \"sample\" : null, \"default\" : true},\n        \"server.cfg\"            : { \"path\" : \"/home/steam/server_files/csgo/cfg/server.cfg\", \"sample\" : null,  \"default\" : true},\n        \"gamemodes.txt\"         : { \"path\" : \"/home/steam/server_files/csgo/gamemodes.txt\", \"sample\" : \"/home/steam/server_files/csgo/gamemodes.txt\",  \"default\" : true},\n        \"gamemodes_server.txt\"  : { \"path\" : \"/home/steam/server_files/csgo/gamemodes_server.txt\", \"sample\" : \"gamemodes_server.txt.example\",  \"default\" : true}\n    }\n}\n</code></pre>"},{"location":"development/games/ark/","title":"Ark","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/ark/#official-documentation","title":"Official Documentation","text":"<p>Source Guide Command Line Arguments</p>"},{"location":"development/games/ark/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/ark/#features","title":"Features","text":"<ul> <li> None requested</li> </ul> <ul> <li> RELEASED  Plan is available for use.</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/assetto_corsa_competizione/","title":"Assetto Corsa Competizione","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/assetto_corsa_competizione/#official-documentation","title":"Official Documentation","text":"<p>Server docs</p> <p>Steam Store</p>"},{"location":"development/games/assetto_corsa_competizione/#additional-info","title":"Additional Info","text":"<p>How to stand up a dedicated server (unofficial)</p>"},{"location":"development/games/assetto_corsa_competizione/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/assetto_corsa_competizione/#features","title":"Features","text":"<ul> <li> None requested</li> </ul> <ul> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/cs2/","title":"Counter Strike 2","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/cs2/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/cs2/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/cs2/#features","title":"Features","text":"<ul> <li> ADDED  Advanced server customization enabled (get/put config files in place)</li> </ul> <ul> <li> RELEASED  Plan is available for use.</li> <li> ADDED  Basic server customization enabled (environment variables)</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/csgo/","title":"Counter Strike: Global Offensive","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/csgo/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/csgo/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/csgo/#features","title":"Features","text":"<ul> <li> ADDED  Advanced server customization enabled (get/put config files in place)</li> </ul> <ul> <li> RELEASED  Plan is available for use.</li> <li> ADDED  Basic server customization enabled (environment variables)</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/enshrouded/","title":"Enshrouded","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/enshrouded/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/enshrouded/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/enshrouded/#features","title":"Features","text":"<ul> <li> None requested</li> </ul> <ul> <li> RELEASED  Plan is available for use.</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/palworld/","title":"Palworld","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/palworld/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/palworld/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/palworld/#features","title":"Features","text":""},{"location":"development/games/palworld/#20240210","title":"2024/02/10","text":"<ul> <li> ADDED  Ability to modify server settings (as of 10 Feb 2024)</li> </ul>"},{"location":"development/games/palworld/#2024027","title":"2024/02/7","text":"<ul> <li> RELEASED  Plan is available for use.</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/q3arena/","title":"Quake 3 Arena","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/q3arena/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/q3arena/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/q3arena/#features","title":"Features","text":"<ul> <li> CHANGED  Updated source image for PEON.</li> </ul> <ul> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/satisfactory/","title":"Satisfactory","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/satisfactory/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/satisfactory/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/satisfactory/#features","title":"Features","text":"<ul> <li> ADDED  Epic games integration</li> </ul> <ul> <li> RELEASED  Plan is available for use.</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/starbound/","title":"Starbound","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/starbound/#official-documentation","title":"Official Documentation","text":"<p>How to stand up a dedicated server guide.</p> <p>Steam Store</p>"},{"location":"development/games/starbound/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/starbound/#features","title":"Features","text":"<ul> <li> STUCK  Requires <code>steamcmd</code> user login, and steamcmd does not yet support full app authentication flow </li> </ul> <ul> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/valheim/","title":"Valheim","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/valheim/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/valheim/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/valheim/#features","title":"Features","text":"<ul> <li> None requested</li> </ul> <ul> <li> RELEASED  Plan is available for use.</li> <li> CHANGED  Reworked with <code>steamcmd</code> release to confirm better deployment standard.</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"development/games/vrising/","title":"V Rising","text":"<p>The PEON war plan that Peon uses to deploy your game server.</p> <p></p>"},{"location":"development/games/vrising/#official-documentation","title":"Official Documentation","text":"<p>Source Guide</p>"},{"location":"development/games/vrising/#code-repo","title":"Code Repo","text":"<ul> <li>GitHub Project</li> </ul>"},{"location":"development/games/vrising/#features","title":"Features","text":"<ul> <li> None requested</li> </ul> <ul> <li> RELEASED  Plan is available for use.</li> <li> CHANGED  Reworked with <code>steamcmd-winehq</code> release to confirm better deployment standard.</li> <li> INITIALISED  Initial build.</li> </ul>"},{"location":"guides/","title":"Introduction","text":"<p>Welcome to the guides for the PEON project.</p> <p>Here you will learn how to get up and running as fast as possible.</p>"},{"location":"guides/#peon-deployment","title":"PEON Deployment","text":""},{"location":"guides/#pre-requisites","title":"Pre-Requisites","text":"<p>The following packages should be installed for PEON to run.</p> <pre><code>- git\n- Docker\n- Docker Compose\n</code></pre>"},{"location":"guides/#1-download-base-deployment","title":"1. Download base deployment","text":"<p>After navigating to your desired directory, you can pull the latest project release. The folder <code>peon</code> will automatically be created</p> <pre><code>git clone https://github.com/the-peon-project/peon\n</code></pre>"},{"location":"guides/#2-download-the-latest-release","title":"2. Download the latest release","text":"<p> If you want to deploy a Discord bot, you need to first create a <code>DISCORD TOKEN</code>. You can follow the steps at this link</p> <p>You can now deploy PEON with the following.</p> <pre><code>cd peon\n./deploy_peon.sh\n</code></pre>"},{"location":"guides/#peon-usage","title":"PEON Usage","text":"<pre><code>peon\n</code></pre>"},{"location":"guides/02_rest_api/","title":"REST API","text":"<p>All orchestrators are managed/controlled directly with the REST API.</p> <p>Please look at the live docs for detailed development information.</p>"},{"location":"guides/02_rest_api/#restful-api","title":"RESTful API","text":"<p>We are using a RESTful API as it is quite easy and there are plenty of guides on how to use REST as a technology.</p> <p>A Postman collection file can be used for convenience.</p>"},{"location":"guides/02_rest_api/#authorization","title":"Authorization","text":"<p>We plan on supporting more and more authorization methods. Currently, the below list is what is supported.</p>"},{"location":"guides/02_rest_api/#api-key","title":"API-KEY","text":"<p>The defaults are as below. Please change these in the <code>.env</code> file for the orchestrator.</p> header key value <code>X-Api-Key</code> <code>my-super-secret-api-key</code>"},{"location":"guides/02_rest_api/#basic-overview","title":"Basic Overview","text":"<p>This API expects a JSON payload in most cases.</p>"},{"location":"guides/02_rest_api/#base-uriurl","title":"Base URI/URL","text":"<p>The base follows the standard below.</p> <pre><code># structure\n{{peon_orchestrator_url}}:{{api_port}}/api/v1/\n\n# some valid examples include\nhttps://gameserver.cloud:5000/api/v1/\nhttp://192.168.20.2:5000/api/v1/\nhttp://localhost:5000/api/v1/\n</code></pre> <p>We are currently on version <code>1.0</code> of the API. We will try to keep from having to change endpoints, however, if that has to happen we'll opt to create a new version.</p>"},{"location":"guides/02_rest_api/#endpoints","title":"Endpoints","text":"<p>The below endpoints are the current GA endpoints for the PEON Orchestrator</p>"},{"location":"guides/02_rest_api/#servers","title":"Servers","text":"<p>Will list all game servers that are registered to the Orchestrator.</p> <pre><code>    servers:\n        - [GET] List all servers registered to Orchestrator\n        - [PUT] Scan the servers folder and import any available servers\n</code></pre>"},{"location":"guides/02_rest_api/#payload","title":"Payload","text":"<p>No payload required</p>"},{"location":"guides/02_rest_api/#example","title":"Example","text":"<p>Creating a <code>Valheim</code> server</p> <p>URL</p> <pre><code>http://orc.domain.com:5000/api/v1/servers\n</code></pre> <p>HEADERS</p> <pre><code>{ \"X-Api-Key\" : \"my-super-secret-api-key\" }\n</code></pre> <p>PAYLOAD [BODY]</p> <p>N/A</p>"},{"location":"guides/02_rest_api/#server","title":"Server","text":"<p>Used for managing a specific server instance with a known <code>SERVERNAME</code>.</p> <pre><code>    server/get/GAME_UID.SERVERNAME:\n        - [GET] Get details of a game server\n    server/stats/GAME_UID.SERVERNAME:\n        - [GET] Get details of a game server, with performance statistics\n    server/save/GAME_UID.SERVERNAME:\n        - [GET] Download a copy of the config and user files for a server.\n    server/create/GAME_UID.SERVERNAME:\n        - [PUT] Create a new game server\n        payload: { \"description\": \"A PEON game server for ark.\", \"start_later\" : true, \"setting01\" : \"value01\", \"setting02\" : \"value02\", \"setting0N\" : \"value0N\"} *description &amp; start_later are optional. **All other settings can be found be querying the game servers's relevant plan.\n    server/start/GAME_UID.SERVERNAME:\n        - [PUT] Start a specific game server from the Orchestrator\n    server/stop/GAME_UID.SERVERNAME:\n        - [PUT] Stop a specific game server from the Orchestrator\n    server/restart/GAME_UID.SERVERNAME:\n        - [PUT] Restart a specific game server from the Orchestrator\n    server/description/GAME_UID.SERVERNAME:\n        - [PUT] Update the description of a specific game server from the Orchestrator\n    server/destroy/GAME_UID.SERVERNAME:\n        - [DEL] Removes a game container leaving the server and config files intact (optional flag to delete all files as well)\n        payload: { \"eradicate\" : \"True\" } *Optional (destructive data removal)\n    server/eradicate/GAME_UID.SERVERNAME:\n        - [DEL] Deletes all game data &amp; config files\n        payload: { \"eradicate\" : \"True\" } *Required\n</code></pre>"},{"location":"guides/02_rest_api/#example_1","title":"Example","text":"<p>Creating a <code>Valheim</code> server *Query your Orc's API for the intended game's plan for the relevant settings (e.g. <code>/api/v1/plan/valheim</code>). Settings with empty <code>\"\"</code> are required settings. The others are optional.</p> <p>URL</p> <pre><code>http://orc.domain.com:5000/api/v1/server/create/{{GAME_UID}}.{{SERVERNAME}}\n</code></pre> <p>The {{GAME_UID}} value needs to be available to your Orcestrator's plan list. The {{SERVERNAME}} value can be different from what is provided in the payload. This {{SERVERNAME}} value will form part of the game server's unique ID and will be how the server is referenced going forward.</p> <p>HEADERS</p> <pre><code>{ \"X-Api-Key\" : \"my-super-secret-api-key\" }\n</code></pre> <p>PAYLOAD [BODY]</p> <p>Only <code>JSON</code> payloads are currently supported.</p> <pre><code>{\n    \"SERVER_NAME\": \"\",\n    \"WORLD_NAME\": \"\",\n    \"PASSWORD\": \"\",\n    \"description\": \"A PEON game server for valheim.\"\n}\n</code></pre>"},{"location":"guides/02_rest_api/#plans","title":"Plans","text":"<p>Manage available game plans.</p> <pre><code>    plans:\n        - [GET] List all local game plans.\n    plans:\n        - [PUT] Download latest game plan list from Peon Project.\n</code></pre>"},{"location":"guides/02_rest_api/#payload_1","title":"Payload","text":"<p>No payload required</p>"},{"location":"guides/02_rest_api/#example_2","title":"Example","text":"<p>Listing the locally available game plans.</p> <p>URL</p> <pre><code>http://orc.domain.com:5000/api/v1/plans\n</code></pre> <p>HEADERS</p> <pre><code>{ \"X-Api-Key\" : \"my-super-secret-api-key\" }\n</code></pre> <p>PAYLOAD [BODY]</p> <p>N/A</p>"},{"location":"guides/02_rest_api/#plan","title":"Plan","text":"<p>Manage a specific game plan.</p> <pre><code>    plan/GAME_UID:\n        - [GET] Get the required/optional settings for a specific game plan.\n</code></pre>"},{"location":"guides/02_rest_api/#payload_2","title":"Payload","text":"<p>No payload required</p>"},{"location":"guides/02_rest_api/#example_3","title":"Example","text":"<p>Listing the locally available game plans.</p> <p>URL</p> <pre><code>http://orc.domain.com:5000/api/v1/plan/{{GAME_UID}}\n</code></pre> <p>HEADERS</p> <pre><code>{ \"X-Api-Key\" : \"my-super-secret-api-key\" }\n</code></pre> <p>PAYLOAD [BODY]</p> <p>N/A</p>"},{"location":"guides/50_bot_discord/","title":"Bot.Discord","text":""},{"location":"guides/50_bot_discord/#commands","title":"Commands","text":"<p>Below are the commands that can be run against the bot.</p> symbol command description <code>!poke</code> to check if there is an available peon to do some work. <code>!getall</code> to list all warcamps in the warparty. <code>!get</code> to show the status of a warcamp. <code>!start</code> to start a warcamp. <code>!stop</code> to stop a warcamp. <code>!restart</code> to restart a warcamp. <code>!schedule</code> to schedule a date and time when a warcamp must start/stop. <code>!extend</code> to keep a warcamp alive for [x] more hours. <code>!register</code> to register a warparty. <code>!unregister</code> to remove a registered warparty. <code>!usage</code> to print this help menu."},{"location":"guides/games/","title":"Introduction","text":"<p>Here you can find out how to use the servers, as they are built.</p> <p>Please note that you will be linked to the official docs where possible, as we don't want to deviate from the original where possible.</p>"},{"location":"guides/games/#steam-things","title":"Steam Things","text":""},{"location":"guides/games/#login-token","title":"Login Token","text":"<p>Some games require you to register a Token with Steam that is used to register against thier servers (e.g. CSGO).</p> <p>Go to get my login token to create one.</p> <p>Fill in the boxes below and click create. You will get a <code>login token</code> which is all you need.</p> <p>You can then set this in the <code>.env</code> file for the server, in the <code>./peon/servers/[game_uid]/[server_name]/</code> directory.</p> <p></p>"},{"location":"guides/games/ark/","title":"Ark","text":""},{"location":"guides/games/ark/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/ark/#world-saves","title":"World Saves","text":"<p>Your world saves will be stored in the path <code>./user</code> if you use the provided <code>docker-compose.yml</code>. This will allow you to download/backup/move files around at your leisure.</p>"},{"location":"guides/games/ark/#manually-configuring-settings","title":"Manually Configuring Settings","text":"<p>You can go to the official docs to see what you can change. Just replace the config files with what you want and restart the server.</p> <p>Offical Guide</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/ark/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/ark/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"},{"location":"guides/games/assetto_corsa_competizione/","title":"Assetto Corsa Competizione","text":""},{"location":"guides/games/assetto_corsa_competizione/#in-development","title":"IN DEVELOPMENT","text":"<p>Development Page</p>"},{"location":"guides/games/cs2/","title":"Counter Strike 2","text":""},{"location":"guides/games/cs2/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/cs2/#game-server-login-token","title":"Game Server Login Token","text":"<p>If you wish to run this server outside of your private network (required by Steam for any servers running outside of your home LAN), you will need to get a game server login token.</p> <p>Registering Game Server Login Token</p>"},{"location":"guides/games/cs2/#manually-configuring-settings","title":"Manually Configuring Settings","text":"<p>You can go to the official docs to see what you can change. Just replace the config files with what you want and restart the server.</p> <p>Offical Guide</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/cs2/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/cs2/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"},{"location":"guides/games/csgo/","title":"Counter Strike: Global Offensive","text":""},{"location":"guides/games/csgo/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/csgo/#game-server-login-token","title":"Game Server Login Token","text":"<p>If you wish to run this server outside of your private network (required by Steam for any servers running outside of your home LAN), you will need to get a game server login token.</p> <p>Registering Game Server Login Token</p>"},{"location":"guides/games/csgo/#manually-configuring-settings","title":"Manually Configuring Settings","text":"<p>You can go to the official docs to see what you can change. Just replace the config files with what you want and restart the server.</p> <p>Offical Guide</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/csgo/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/csgo/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"},{"location":"guides/games/enshrouded/","title":"Enshrouded","text":""},{"location":"guides/games/enshrouded/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/enshrouded/#world-saves","title":"World Saves","text":"<p>Your world saves will be stored in the path <code>./user</code> if you use the provided <code>docker-compose.yml</code>. You can find the Server Config in the Config subfolder and your saved game in the SaveGames subfolder. This will allow you to download/backup/move files around at your leisure.</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/enshrouded/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/enshrouded/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"},{"location":"guides/games/palworld/","title":"Palworld","text":""},{"location":"guides/games/palworld/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/palworld/#world-saves","title":"World Saves","text":"<p>Your world saves will be stored in the path <code>./user</code> if you use the provided <code>docker-compose.yml</code>. You can find the Server Config in the Config subfolder and your saved game in the SaveGames subfolder. This will allow you to download/backup/move files around at your leisure.</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/palworld/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/palworld/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"},{"location":"guides/games/q3arena/","title":"Quake 3 Arena","text":""},{"location":"guides/games/q3arena/#in-development","title":"IN DEVELOPMENT","text":"<p>Development Page</p>"},{"location":"guides/games/satisfactory/","title":"Satisfactory","text":""},{"location":"guides/games/satisfactory/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/satisfactory/#world-saves","title":"World Saves","text":"<p>Your world saves will be stored in the path <code>./user</code> if you use the provided <code>docker-compose.yml</code>. This will allow you to download/backup/move files around at your leisure.</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/satisfactory/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/satisfactory/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"},{"location":"guides/games/starbound/","title":"Starbound","text":""},{"location":"guides/games/starbound/#in-development","title":"IN DEVELOPMENT","text":"<p>Development Page</p>"},{"location":"guides/games/valheim/","title":"Valheim","text":""},{"location":"guides/games/valheim/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/valheim/#world-saves","title":"World Saves","text":"<p>Your world saves will be stored in the path <code>./user</code> if you use the provided <code>docker-compose.yml</code>. This will allow you to download/backup/move files around at your leisure.</p>"},{"location":"guides/games/valheim/#manually-configuring-settings","title":"Manually Configuring Settings","text":"<p>You can go to the official docs to see what you can change. Just replace the config files with what you want and restart the server.</p> <p>Offical Guide</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/valheim/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/valheim/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"},{"location":"guides/games/vrising/","title":"V Rising","text":""},{"location":"guides/games/vrising/#before-you-start","title":"Before you start","text":""},{"location":"guides/games/vrising/#world-saves","title":"World Saves","text":"<p>Your world saves will be stored in the path <code>./user</code> if you use the provided <code>docker-compose.yml</code>. This will allow you to download/backup/move files around at your leisure.</p>"},{"location":"guides/games/vrising/#manually-configuring-settings","title":"Manually Configuring Settings","text":"<p>You can go to the official docs to see what you can change. Just replace the config files with what you want and restart the server.</p> <p>Offical Guide</p> <p>All of these files can be found and edited in the server's local storage path.</p> <p><code>./peon/servers/[game_uid]/[server_name]/</code></p>"},{"location":"guides/games/vrising/#stand-alone-mode","title":"Stand-alone mode","text":"<p>Guide on GitHub</p> <p>Or... just use PEON. it should do all the heavy lifting for you.</p>"},{"location":"guides/games/vrising/#links","title":"Links","text":"<p>If you want to dig a bit deeper, here are the links</p> <ul> <li>Development Docs</li> <li>GitHub Project</li> </ul>"}]}